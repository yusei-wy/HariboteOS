     1                                  ; haribote-os boot nasm
     2                                  ; TAB=4
     3                                  
     4                                  VBEMODE EQU     0x103           ; 1024 x 768 x 8bit カラー
     5                                  ; (画面モード一覧)
     6                                  ;   0x100 : 640 x 400 x 8bit color
     7                                  ;   0x101 : 640 x 480 x 8bit color
     8                                  ;   0x103 : 800 x 600 x 8bit color
     9                                  ;   0x105 : 1024 x 768 x 8bit color
    10                                  ;   0x107 : 1280 x 1024 x 8bit color
    11                                  
    12                                  BOTPAK  EQU     0x00280000      ; bootpack のロード先
    13                                  DSKCAC  EQU     0x00100000      ; ディスクキャッシュの場所
    14                                  DSKCAC0 EQU     0x00008000      ; ディスクキャッシュの場所(リアルモード)
    15                                  
    16                                  ; BOOT_INFO 関係
    17                                  CYLS    EQU     0x0ff0          ; ブートセクタが設定する
    18                                  LEDS    EQU     0x0ff1
    19                                  VMODE   EQU     0x0ff2          ; 色数に関する情報, 何ビットカラーか？
    20                                  SCRNX   EQU     0x0ff4          ; 解像度の X(screen x)
    21                                  SCRNY   EQU     0x0ff6          ; 解像度の Y(screen y)
    22                                  VRAM    EQU     0x0ff8          ; グラフィックバッファの開始番地
    23                                  
    24                                          ORG     0xc200          ; このプログラムがどこに読み込まれるのか
    25                                  
    26                                  ; VBE 存在確認
    27                                          
    28 00000000 B80090                          MOV     AX,0x9000
    29 00000003 8EC0                            MOV     ES,AX
    30 00000005 BF0000                          MOV     DI,0
    31 00000008 B8004F                          MOV     AX,0x4f00
    32 0000000B CD10                            INT     0x10
    33 0000000D 83F84F                          CMP     AX,0x004f
    34 00000010 7552                            JNE     scrn320
    35                                  
    36                                  ; VBE のバージョンチェック
    37                                          
    38 00000012 268B4504                        MOV     AX,[ES:DI+4]
    39 00000016 3D0002                          CMP     AX,0x0200
    40 00000019 7249                            JB      scrn320          ; if (AX < 0x0200) goto scrn320
    41                                  
    42                                  ; 画面モード情報を得る
    43                                  
    44 0000001B B90301                          MOV     CX,VBEMODE
    45 0000001E B8014F                          MOV     AX,0x4f01
    46 00000021 CD10                            INT     0x10
    47 00000023 83F84F                          CMP     AX,0x004f
    48 00000026 753C                            JNE     scrn320
    49                                  
    50                                  ; 画面モード情報の確認
    51                                  
    52 00000028 26807D1908                      CMP     BYTE [ES:DI+0x19],8
    53 0000002D 7535                            JNE     scrn320
    54 0000002F 26807D1B04                      CMP     BYTE [ES:DI+0x1b],4
    55 00000034 752E                            JNE     scrn320
    56 00000036 268B05                          MOV     AX,[ES:DI+0x00]
    57 00000039 258000                          AND     AX,0x0080
    58 0000003C 7426                            JZ      scrn320          ; モード属性の bit7 が0だったので諦める
    59                                  
    60                                  ; 画面モードの切り替え
    61                                  
    62 0000003E BB0341                          MOV     BX,VBEMODE+0x4000
    63 00000041 B8024F                          MOV     AX,0x4f02
    64 00000044 CD10                            INT     0x10
    65 00000046 C606F20F08                      MOV     BYTE [VMODE],8 ; 描画モードをメモする(C言語が参照する)
    66 0000004B 268B4512                        MOV     AX,[ES:DI+0x12]
    67 0000004F A3F40F                          MOV     [SCRNX],AX
    68 00000052 268B4514                        MOV     AX,[ES:DI+0x14]
    69 00000056 A3F60F                          MOV     [SCRNY],AX
    70 00000059 26668B4528                      MOV     EAX,[ES:DI+0x28]
    71 0000005E 66A3F80F                        MOV     [VRAM],EAX
    72 00000062 EB20                            JMP     keystatus
    73                                  
    74                                  scrn320:
    75 00000064 B013                            MOV     AL,0x13         ; VGA グラフィックス, 320x200x8bit color
    76 00000066 B400                            MOV     AH,0x00
    77 00000068 CD10                            INT     0x10
    78 0000006A C606F20F08                      MOV     BYTE [VMODE],8  ; 画面モードをメモる(C言語が参照する)
    79 0000006F C706F40F4001                    MOV     WORD [SCRNX],320
    80 00000075 C706F60FC800                    MOV     WORD [SCRNY],200
    81 0000007B 66C706F80F00000A00              MOV     DWORD [VRAM],0x000a0000
    82                                  
    83                                  ; キーボードの LED 状態を BIOS に教えてもらう
    84                                  
    85                                  keystatus:
    86                                  
    87 00000084 B402                            MOV     AH,0x02
    88 00000086 CD16                            INT     0x16           ; keyboard BIOS
    89 00000088 A2F10F                          MOV     [LEDS],AL
    90                                  
    91                                  ; PIC が一切の割り込みを受けないようにする
    92                                  ; AT 互換機の仕様では PIC の初期化をするなら,
    93                                  ; こいつを CLI 前にやっておかないとたまにハングアップする
    94                                  ; PIC の初期化はあとでやる
    95                                  
    96 0000008B B0FF                            MOV        AL,0xff
    97 0000008D E621                            OUT        0x21,AL
    98 0000008F 90                              NOP                       ; OUT 命令を連続させるとうまく行かない機種があるらしいので
    99 00000090 E6A1                            OUT        0xa1,AL
   100                                  
   101 00000092 FA                              CLI                   ; さらに CPU レベルでも割り込み禁止
   102                                  
   103                                  ; CPU から 1MB 以上のメモリにアクセスできるように A20GATE を設定
   104                                  
   105 00000093 E8B500                          CALL    waitkbdout
   106 00000096 B0D1                            MOV        AL,0xd1
   107 00000098 E664                            OUT        0x64,AL
   108 0000009A E8AE00                          CALL    waitkbdout
   109 0000009D B0DF                            MOV        AL,0xdf        ; enable A20
   110 0000009F E660                            OUT        0x60,AL
   111 000000A1 E8A700                          CALL    waitkbdout
   112                                  
   113                                  ; プロテクトモード移行
   114                                  
   115                                  ; nasm だと使えない
   116                                  ;[INSTRSET "i486p"]            ; 486の命令まで使いたいという記述
   117                                  
   118 000000A4 0F0116[8A01]                    LGDT    [GDTR0]        ; 暫定 GDT を設定
   119 000000A9 0F20C0                          MOV     EAX,CR0
   120 000000AC 6625FFFFFF7F                    AND     EAX,0x7fffffff ; bit31 を0にする(ページング禁止のため)
   121 000000B2 6683C801                        OR      EAX,0x00000001 ; bit0 を1にする(プロテクトモード移行のため)
   122 000000B6 0F22C0                          MOV     CR0,EAX
   123 000000B9 EB00                            JMP     pipelineflash
   124                                  pipelineflash:
   125 000000BB B80800                          MOV     AX,1*8         ; 読み書き可能セグメント 32bit
   126 000000BE 8ED8                            MOV     DS,AX
   127 000000C0 8EC0                            MOV     ES,AX
   128 000000C2 8EE0                            MOV     FS,AX
   129 000000C4 8EE8                            MOV     GS,AX
   130 000000C6 8ED0                            MOV     SS,AX
   131                                  
   132                                  ; bootpack の転送
   133                                  
   134 000000C8 66BE[90010000]                  MOV     ESI,bootpack   ; 転送元
   135 000000CE 66BF00002800                    MOV     EDI,BOTPAK     ; 転送先
   136 000000D4 66B900000200                    MOV     ECX,512*1024/4
   137 000000DA E87700                          CALL    memcpy
   138                                  
   139                                  ; ついでにディスクデータも本来の位置へ転送
   140                                  
   141                                  ; まずはブートセクタから
   142                                  
   143 000000DD 66BE007C0000                    MOV     ESI,0x7c00     ; 転送元
   144 000000E3 66BF00001000                    MOV     EDI,DSKCAC     ; 転送先
   145 000000E9 66B980000000                    MOV     ECX,512/4
   146 000000EF E86200                          CALL    memcpy
   147                                  
   148                                  ; 残り全部
   149                                  
   150 000000F2 66BE00820000                    MOV     ESI,DSKCAC0+512 ; 転送元
   151 000000F8 66BF00021000                    MOV     EDI,DSKCAC+512  ; 転送先
   152 000000FE 66B900000000                    MOV     ECX,0
   153 00000104 8A0EF00F                        MOV     CL,BYTE [CYLS]
   154 00000108 6669C900120000                  IMUL    ECX,512*18*2/4  ; シリンダ数からバイト数/4に変換
   155 0000010F 6681E980000000                  SUB     ECX,512/4       ; IPL の分だけ差し引く
   156 00000116 E83B00                          CALL    memcpy
   157                                  
   158                                  ; asmhead でしなければいけないことは全部し終わったので
   159                                  ; あとは bootpack に任せる
   160                                  
   161                                  ; bootpack の起動
   162                                  
   163 00000119 66BB00002800                    MOV     EBX,BOTPAK
   164 0000011F 66678B4B10                      MOV     ECX,[EBX+16]
   165 00000124 6683C103                        ADD     ECX,3            ; ECX += 3;
   166 00000128 66C1E902                        SHR     ECX,2            ; ECX /= 4;
   167 0000012C 7410                            JZ      skip             ; 転送するべきものが内
   168 0000012E 66678B7314                      MOV     ESI,[EBX+20]     ; 転送元
   169 00000133 6601DE                          ADD     ESI,EBX
   170 00000136 66678B7B0C                      MOV     EDI,[EBX+12]     ; 転送先
   171 0000013B E81600                          CALL    memcpy
   172                                  skip:
   173 0000013E 66678B630C                      MOV     ESP,[EBX+12]     ; スタック初期値
   174 00000143 66EA1B0000001000                JMP     DWORD 2*8:0x0000001b
   175                                  
   176                                  waitkbdout:
   177 0000014B E464                            IN      AL,0x64
   178 0000014D 2402                            AND     AL,0x02
   179 0000014F E460                            IN      AL,0x60           ; 空読み(受信バッファが悪さをしないように)
   180 00000151 75F8                            JNZ     waitkbdout        ; AND の結果が0でなければ waitkbdout へ
   181 00000153 C3                              RET
   182                                  
   183                                  memcpy:
   184 00000154 66678B06                        MOV     EAX,[ESI]
   185 00000158 6683C604                        ADD     ESI,4
   186 0000015C 66678907                        MOV     [EDI],EAX
   187 00000160 6683C704                        ADD     EDI,4
   188 00000164 6683E901                        SUB     ECX,1
   189 00000168 75EA                            JNZ     memcpy            ; 引き算した結果が0でなければ memcpy へ
   190 0000016A C3                              RET
   191                                  ; memcpy はアドレスサイズプリフィックスを入れ忘れなければ, ストリング命令もかける
   192                                  
   193 0000016B <res 00000005>                  ALIGNB  16
   193          ******************       warning: uninitialized space declared in .text section: zeroing
   194                                  GDT0:
   195 00000170 <res 00000008>                  RESB    8                  ; 塗るセレクタ
   195          ******************       warning: uninitialized space declared in .text section: zeroing
   196 00000178 FFFF00000092CF00                DW      0xffff,0x0000,0x9200,0x00cf  ; 読み書き可能セグメント 32bit
   197 00000180 FFFF0000289A4700                DW      0xffff,0x0000,0x9a28,0x0047  ; 事項可能セグメント 32bit(bootpack 用)
   198                                  
   199 00000188 0000                            DW      0
   200                                  GDTR0:
   201 0000018A 1700                            DW      8*3-1
   202 0000018C [70010000]                      DD      GDT0
   203                                  
   204                                          ALIGNB  16
   205                                  bootpack:

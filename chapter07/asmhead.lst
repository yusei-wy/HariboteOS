     1                                  ; haribote-os
     2                                  ; TAB=4
     3                                  
     4                                  BOTPAK  EQU        0x00280000     ; bootpack のロード先
     5                                  DSKCAC  EQU        0x00100000     ; ディスクキャッシュの場所
     6                                  DSKCAC0 EQU        0x00008000     ; ディスクキャッシュの場所(リアルモード)
     7                                  
     8                                  ; BOOT_INFO 関係
     9                                  CYLS    EQU        0x0ff0        ; ブートセクタが設定する
    10                                  LEDS    EQU        0x0ff1
    11                                  VMODE   EQU        0x0ff2        ; 色数に関する情報, 何ビットカラーか？
    12                                  SCRNX   EQU        0x0ff4        ; 解像度の X(screen x)
    13                                  SCRNY   EQU        0x0ff6        ; 解像度の Y(screen y)
    14                                  VRAM    EQU        0x0ff8        ; グラフィックバッファの開始番地
    15                                  
    16                                          ORG        0xc200         ; このプログラムがどこに読み込まれるのか
    17                                  
    18                                  ; 画面モードを設定
    19                                  
    20 00000000 B013                            MOV        AL,0x13        ; VGA グラフィックス, 320x200x8bit カラー
    21 00000002 B400                            MOV        AH,0x00
    22 00000004 CD10                            INT        0x10
    23 00000006 C606F20F08                      MOV        BYTE [VMODE],8 ; 描画モードをメモする(C言語が参照する)
    24 0000000B C706F40F4001                    MOV        WORD [SCRNX],320
    25 00000011 C706F60FC800                    MOV        WORD [SCRNY],200
    26 00000017 66C706F80F00000A00              MOV        DWORD [VRAM], 0x000a0000
    27                                  
    28                                  ; キーボードの LED 状態を BIOS に教えてもらう
    29                                  
    30 00000020 B402                            MOV        AH,0x02
    31 00000022 CD16                            INT        0x16           ; keyboard BIOS
    32 00000024 A2F10F                          MOV        [LEDS],AL
    33                                  
    34                                  ; PIC が一切の割り込みを受けないようにする
    35                                  ; AT 互換機の仕様では PIC の初期化をするなら,
    36                                  ; こいつを CLI 前にやっておかないとたまにハングアップする
    37                                  ; PIC の初期化はあとでやる
    38                                  
    39 00000027 B0FF                            MOV        AL,0xff
    40 00000029 E621                            OUT        0x21,AL
    41 0000002B 90                              NOP                       ; OUT 命令を連続させるとうまく行かない機種があるらしいので
    42 0000002C E6A1                            OUT        0xa1,AL
    43                                  
    44 0000002E FA                              CLI                   ; さらに CPU レベルでも割り込み禁止
    45                                  
    46                                  ; CPU から 1MB 以上のメモリにアクセスできるように A20GATE を設定
    47                                  
    48 0000002F E8B500                          CALL    waitkbdout
    49 00000032 B0D1                            MOV        AL,0xd1
    50 00000034 E664                            OUT        0x64,AL
    51 00000036 E8AE00                          CALL    waitkbdout
    52 00000039 B0DF                            MOV        AL,0xdf        ; enable A20
    53 0000003B E660                            OUT        0x60,AL
    54 0000003D E8A700                          CALL    waitkbdout
    55                                  
    56                                  ; プロテクトモード移行
    57                                  
    58                                  ; nasm だと使えない
    59                                  ;[INSTRSET "i486p"]            ; 486の命令まで使いたいという記述
    60                                  
    61 00000040 0F0116[2A01]                    LGDT    [GDTR0]        ; 暫定 GDT を設定
    62 00000045 0F20C0                          MOV     EAX,CR0
    63 00000048 6625FFFFFF7F                    AND     EAX,0x7fffffff ; bit31 を0にする(ページング禁止のため)
    64 0000004E 6683C801                        OR      EAX,0x00000001 ; bit0 を1にする(プロテクトモード移行のため)
    65 00000052 0F22C0                          MOV     CR0,EAX
    66 00000055 EB00                            JMP     pipelineflash
    67                                  pipelineflash:
    68 00000057 B80800                          MOV     AX,1*8         ; 読み書き可能セグメント 32bit
    69 0000005A 8ED8                            MOV     DS,AX
    70 0000005C 8EC0                            MOV     ES,AX
    71 0000005E 8EE0                            MOV     FS,AX
    72 00000060 8EE8                            MOV     GS,AX
    73 00000062 8ED0                            MOV     SS,AX
    74                                  
    75                                  ; bootpack の転送
    76                                  
    77 00000064 66BE[30010000]                  MOV     ESI,bootpack   ; 転送元
    78 0000006A 66BF00002800                    MOV     EDI,BOTPAK     ; 転送先
    79 00000070 66B900000200                    MOV     ECX,512*1024/4
    80 00000076 E87700                          CALL    memcpy
    81                                  
    82                                  ; ついでにディスクデータも本来の位置へ転送
    83                                  
    84                                  ; まずはブートセクタから
    85                                  
    86 00000079 66BE007C0000                    MOV     ESI,0x7c00     ; 転送元
    87 0000007F 66BF00001000                    MOV     EDI,DSKCAC     ; 転送先
    88 00000085 66B980000000                    MOV     ECX,512/4
    89 0000008B E86200                          CALL    memcpy
    90                                  
    91                                  ; 残り全部
    92                                  
    93 0000008E 66BE00820000                    MOV     ESI,DSKCAC0+512 ; 転送元
    94 00000094 66BF00021000                    MOV     EDI,DSKCAC+512  ; 転送先
    95 0000009A 66B900000000                    MOV     ECX,0
    96 000000A0 8A0EF00F                        MOV     CL,BYTE [CYLS]
    97 000000A4 6669C900120000                  IMUL    ECX,512*18*2/4  ; シリンダ数からバイト数/4に変換
    98 000000AB 6681E980000000                  SUB     ECX,512/4       ; IPL の分だけ差し引く
    99 000000B2 E83B00                          CALL    memcpy
   100                                  
   101                                  ; asmhead でしなければいけないことは全部し終わったので
   102                                  ; あとは bootpack に任せる
   103                                  
   104                                  ; bootpack の起動
   105                                  
   106 000000B5 66BB00002800                    MOV     EBX,BOTPAK
   107 000000BB 66678B4B10                      MOV     ECX,[EBX+16]
   108 000000C0 6683C103                        ADD     ECX,3            ; ECX += 3;
   109 000000C4 66C1E902                        SHR     ECX,2            ; ECX /= 4;
   110 000000C8 7410                            JZ      skip             ; 転送するべきものが内
   111 000000CA 66678B7314                      MOV     ESI,[EBX+20]     ; 転送元
   112 000000CF 6601DE                          ADD     ESI,EBX
   113 000000D2 66678B7B0C                      MOV     EDI,[EBX+12]     ; 転送先
   114 000000D7 E81600                          CALL    memcpy
   115                                  skip:
   116 000000DA 66678B630C                      MOV     ESP,[EBX+12]     ; スタック初期値
   117 000000DF 66EA1B0000001000                JMP     DWORD 2*8:0x0000001b
   118                                  
   119                                  waitkbdout:
   120 000000E7 E464                            IN      AL,0x64
   121 000000E9 2402                            AND     AL,0x02
   122 000000EB E460                            IN      AL,0x60           ; 空読み(受信バッファが悪さをしないように)
   123 000000ED 75F8                            JNZ     waitkbdout        ; AND の結果が0でなければ waitkbdout へ
   124 000000EF C3                              RET
   125                                  
   126                                  memcpy:
   127 000000F0 66678B06                        MOV     EAX,[ESI]
   128 000000F4 6683C604                        ADD     ESI,4
   129 000000F8 66678907                        MOV     [EDI],EAX
   130 000000FC 6683C704                        ADD     EDI,4
   131 00000100 6683E901                        SUB     ECX,1
   132 00000104 75EA                            JNZ     memcpy            ; 引き算した結果が0でなければ memcpy へ
   133 00000106 C3                              RET
   134                                  ; memcpy はアドレスサイズプリフィックスを入れ忘れなければ, ストリング命令もかける
   135                                  
   136 00000107 <res 00000009>                  ALIGNB  16
   137          ******************       warning: uninitialized space declared in .text section: zeroing
   138                                  GDT0:
   139 00000110 <res 00000008>                  RESB    8                  ; 塗るセレクタ
   140          ******************       warning: uninitialized space declared in .text section: zeroing
   141 00000118 FFFF00000092CF00                DW      0xffff,0x0000,0x9200,0x00cf  ; 読み書き可能セグメント 32bit
   142 00000120 FFFF0000289A4700                DW      0xffff,0x0000,0x9a28,0x0047  ; 事項可能セグメント 32bit(bootpack 用)
   143                                  
   144 00000128 0000                            DW      0
   145                                  GDTR0:
   146 0000012A 1700                            DW      8*3-1
   147 0000012C [10010000]                      DD      GDT0
   148                                  
   149                                          ALIGNB  16
   150                                  bootpack:
